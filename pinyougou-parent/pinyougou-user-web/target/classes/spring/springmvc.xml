<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
       xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns:dubbo="http://code.alibabatech.com/schema/dubbo"
       xmlns:context="http://www.springframework.org/schema/context"
       xmlns:mvc="http://www.springframework.org/schema/mvc"
       xsi:schemaLocation="http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans.xsd http://code.alibabatech.com/schema/dubbo http://code.alibabatech.com/schema/dubbo/dubbo.xsd http://www.springframework.org/schema/context http://www.springframework.org/schema/context/spring-context.xsd http://www.springframework.org/schema/mvc http://www.springframework.org/schema/mvc/spring-mvc.xsd">
    <!--配置dubbo 消费者-->

    <dubbo:application name="pinyougou-user-web"></dubbo:application>

    <dubbo:registry protocol="zookeeper" address="192.168.25.133" port="2181"></dubbo:registry>

    <!--注解的方式引入服务-->
    <dubbo:annotation package="com.pinyougou.user.controller"></dubbo:annotation>

    <!--配置组件扫描-->
    <context:component-scan base-package="com.pinyougou.user.controller"></context:component-scan>

    <!--配置注解驱动 默认是用JSON的处理jar是jackson 换成fastjson-->
    <!--注解驱动并设置统一日期的输出格式-->
    <mvc:annotation-driven>
        <mvc:message-converters register-defaults="true">
            <bean class="com.alibaba.fastjson.support.spring.FastJsonHttpMessageConverter">
                <property name="supportedMediaTypes" value="application/json"/>
                <property name="features">
                    <array>
                        <!--返回结果是包含null值  默认是过滤掉-->
                        <value>WriteMapNullValue</value>
                        <!--修改全局日期格式 默认是false 表示不修改，自己定义 配置在此处表示要统一日期格式输出 ，默认格式为：yyyy-MM-dd -->
                        <!--JSON.DEFFAULT_DATE_FORMAT-->
                        <value>WriteDateUseDateFormat</value>
                    </array>
                </property>
            </bean>
        </mvc:message-converters>
    </mvc:annotation-driven>

    <!--配置属性文件的引入配置项-->
    <context:property-placeholder location="classpath:config/*.properties"></context:property-placeholder>
    <import resource="spring-security.xml"></import>



</beans>